[
  {
    "instruction": "How can I install the Manim Voiceover plugin to add narration to my videos?",
    "answer": "To install the Manim Voiceover plugin, run the following pip command in your terminal:\n```bash\npip install \"manim-voiceover[azure,gtts]\"\n```\nThis command installs the core plugin along with optional dependencies for Azure and Google Text-to-Speech services. For more detailed installation options, consult the Manim Voiceover documentation."
  },
  {
    "instruction": "I want to add voice narration to my Manim animations directly in my Python script without using external video editing software. Is there a tool for this?",
    "answer": "Yes, the `manim-voiceover` plugin is designed for this purpose. It allows you to integrate voiceovers directly into your Manim scene code. You can either record audio using your microphone during rendering or utilize various Text-to-Speech (TTS) services to generate the audio automatically, synchronizing it with your animations."
  },
  {
    "instruction": "How do I set up a basic Manim scene to use the voiceover functionality?",
    "answer": "To enable voiceover capabilities in your Manim scene, follow these two main steps:\n1.  Make your scene class inherit from `manim_voiceover.VoiceoverScene` instead of the standard `manim.Scene`.\n2.  Inside your scene's `construct` method, specify which speech service to use by calling `self.set_speech_service()`. For instance, to use the microphone recorder, you would add `self.set_speech_service(RecorderService())` after importing `RecorderService` from `manim_voiceover.services.recorder`."
  },
  {
    "instruction": "Explain the purpose and usage of the `with self.voiceover(...)` statement in the manim-voiceover plugin.",
    "answer": "The `with self.voiceover(text=\"...\") as tracker:` statement is the core mechanism for adding and synchronizing voiceovers in the `manim-voiceover` plugin.\n\n1.  **Purpose:** It defines a block of code associated with a specific piece of spoken text.\n2.  **Usage:** You place the Manim animations (`self.play(...)` calls) that should occur *during* the narration of the specified `text` inside this `with` block.\n3.  **Synchronization:** The `tracker` object provides the duration of the generated or recorded audio via `tracker.duration`. You typically pass this value to the `run_time` argument of your animations within the block (e.g., `self.play(Create(obj), run_time=tracker.duration)`). This ensures the animation's length matches the voiceover's length.\n4.  **Sequencing:** Execution pauses at the start of a `with self.voiceover(...)` block until the audio is ready, and subsequent blocks or code outside the `with` statement will only execute after the current voiceover segment has finished playing."
  },
  {
    "instruction": "Generate Manim code for a simple scene that uses the microphone recorder service to synchronize the creation of a Circle with a voiceover.",
    "answer": "```python\nfrom manim import *\nfrom manim_voiceover import VoiceoverScene\nfrom manim_voiceover.services.recorder import RecorderService\n\n# Inherit from VoiceoverScene to enable voiceover features\nclass RecorderCircleExample(VoiceoverScene):\n    def construct(self):\n        # Configure the scene to use the microphone recorder service\n        self.set_speech_service(RecorderService())\n\n        my_circle = Circle()\n\n        # Define the text for the voiceover and synchronize animation\n        with self.voiceover(text=\"I will now create a circle.\") as tracker:\n            # Use tracker.duration to match animation time to voiceover length\n            self.play(Create(my_circle), run_time=tracker.duration)\n\n        # Add a pause and another voiceover section\n        self.wait(1)\n        with self.voiceover(text=\"The circle has been created.\") as tracker:\n             # You can have voiceover without animation, using tracker.duration for pauses\n             self.wait(tracker.duration) \n```\nIn this example, `VoiceoverScene` is used, and `RecorderService` is set. When rendered, you'll be prompted to record the text \"I will now create a circle.\" The `Create(my_circle)` animation will run exactly for the duration of your recording. The second voiceover demonstrates waiting for the duration of the speech."
  },
  {
    "instruction": "How can I use my microphone to record audio for my Manim scene's voiceover during the rendering process?",
    "answer": "To use your microphone for recording voiceovers while rendering, you need to use the `RecorderService` from the `manim-voiceover` plugin.\n1.  Import the service: `from manim_voiceover.services.recorder import RecorderService`.\n2.  In your `VoiceoverScene`'s `construct` method, set it as the speech service: `self.set_speech_service(RecorderService())`.\nWhen you render the scene (e.g., using `manim -pqm your_script.py RecorderCircleExample`), the command line will prompt you to record the audio for each `with self.voiceover(text=\"...\")` block it encounters."
  }
]